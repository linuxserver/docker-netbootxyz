---

# project information
project_name: netbootxyz
project_url: "https://netboot.xyz"
project_logo: "https://netboot.xyz/images/netboot.xyz.gif"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# container parameters
common_param_env_vars_enabled: false
param_container_name: "{{ project_name }}"
param_usage_include_vols: false
param_usage_include_ports: true
param_ports:
  - {external_port: "69", internal_port: "69/udp", port_desc: "TFTP Port."}
param_usage_include_env: false
# application setup block
app_setup_block_enabled: true
app_setup_block: "To use this image you need an existing DHCP server where you can set this TFTP server as your DHCP boot destination. This image does not contain a DHCP server nor do we aim to support one in the future. This is simply a TFTP server hosting the latest IPXE kernel builds from [netboot.xyz]({{ project_url }}). If you are interested in their project and lack the ability to setup a DHCP server to boot this payload they also have USB stick images you can use available on their [downloads page]({{ project_url }}/downloads/).\n\n### Router Setup Examples\n\n#### PFSense\nServices -> DHCP Server\n\nSet both the option for \"TFTP Server\" and the options under the Advanced \"Network Booting\" section. \n* check enable\n* Next server- IP used for TFTP Server\n* Default BIOS file name- `netboot.xyz.kpxe`\n* UEFI 32 bit file name- `netboot.xyz.efi`\n* UEFI 64 bit file name- `netboot.xyz.efi`\n\n#### OPNsense\nServices -> DHCP Server\n\nUnder the Advanced \"Network Booting\" section. \n* check enable\n* Next server- IP of docker host\n* Default BIOS file name- `netboot.xyz.kpxe`\n* UEFI 32 bit file name- `netboot.xyz.efi`\n* UEFI 64 bit file name- `netboot.xyz.efi`\n\n#### Unifi Security Gateway (with the controller)\nNetworks -> LAN (or the network you want to boot from) -> ADVANCED DHCP OPTIONS\n* tick Enable network boot\n* Server-  YOURSERVERIP\n* Filename- `netboot.xyz.kpxe`\n\n#### DD-WRT\nAdministration -> Services -> Additional DNSMasq Options\nSet the following lines: \n```\ndhcp-match=set:bios,60,PXEClient:Arch:00000\ndhcp-boot=tag:bios,netboot.xyz.kpxe,,YOURSERVERIP\ndhcp-match=set:efi32,60,PXEClient:Arch:00006\ndhcp-boot=tag:efi32,netboot.xyz.efi,,YOURSERVERIP\ndhcp-match=set:efi64,60,PXEClient:Arch:00009\ndhcp-boot=tag:efi64,netboot.xyz.efi,,YOURSERVERIP \n```\n\n#### Tomato\nAdvanced -> DHCP/DNS -> Dnsmasq Custom configuration\nSet the following lines: \n```\ndhcp-match=set:bios,60,PXEClient:Arch:00000\ndhcp-boot=tag:bios,netboot.xyz.kpxe,,YOURSERVERIP\ndhcp-match=set:efi32,60,PXEClient:Arch:00006\ndhcp-boot=tag:efi32,netboot.xyz.efi,,YOURSERVERIP\ndhcp-match=set:efi64,60,PXEClient:Arch:00009\ndhcp-boot=tag:efi64,netboot.xyz.efi,,YOURSERVERIP \n```\n\n#### OpenWRT\n```\nuci set dhcp.@dnsmasq[0].dhcp_match=set:bios,60,PXEClient:Arch:00000\nuci set dhcp.@dnsmasq[0].dhcp_boot=tag:bios,netboot.xyz.kpxe,,YOURSERVERIP\nuci set dhcp.@dnsmasq[0].dhcp_match=set:efi32,60,PXEClient:Arch:00006\nuci set dhcp.@dnsmasq[0].dhcp_boot=tag:efi32,netboot.xyz.efi,,YOURSERVERIP\nuci set dhcp.@dnsmasq[0].dhcp_match=set:efi64,60,PXEClient:Arch:00009\nuci set dhcp.@dnsmasq[0].dhcp_boot=tag:efi64,netboot.xyz.efi,,YOURSERVERIP\nuci commit\n/etc/init.d/dnsmasq restart\n```\n\nAnything else from a router standpoint is a crapshoot for supporting Dnsmasq options or proprietary PXE boot options, check Google for support (try your exact router model number with 'pxe boot') or look into setting up your own DHCP server in Linux.\n\nThis image also contains `netboot.xyz.efi` which can be used to boot using UEFI network boot. The UEFI boot and menu will have limited functionality if you choose to use it. \n"
# changelog
changelogs:
  - {date: "01.07.23:", desc: "Deprecate armhf. As announced [here](https://www.linuxserver.io/blog/a-farewell-to-arm-hf)"}
  - {date: "05.03.23:", desc: "Rebase tftp branch to Alpine 3.17."}
  - {date: "14.10.22:", desc: "Rebasing tftp branch to Alpine 3.16, migrate to s6v3."}
  - {date: "23.01.21:", desc: "Rebasing to alpine 3.13."}
  - {date: "01.06.20:", desc: "Rebasing to alpine 3.12."}
  - {date: "19.12.19:", desc: "Rebasing to alpine 3.11."}
  - {date: "10.12.19:", desc: "Adding tftp branch to provide tftp only option to latest users."}
  - {date: "22.10.19:", desc: "Initial release."}
