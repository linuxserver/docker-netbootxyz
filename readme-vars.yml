---

# project information
project_name: netbootxyz
project_url: "https://netboot.xyz"
project_logo: "https://netboot.xyz/images/netboot.xyz.gif"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# container parameters
common_param_env_vars_enabled: false
param_container_name: "{{ project_name }}"
param_usage_include_ports: true
param_ports:
  - {external_port: "69", internal_port: "69/udp", port_desc: "TFTP Port."}
app_setup_block_enabled: true
app_setup_block: |
  To use this image you need an existing DHCP server where you can set this TFTP server as your DHCP boot destination. This image does not contain a DHCP server nor do we aim to support one in the future. This is simply a TFTP server hosting the latest IPXE kernel builds from [netboot.xyz]({{ project_url }}). If you are interested in their project and lack the ability to setup a DHCP server to boot this payload they also have USB stick images you can use available on their [downloads page]({{ project_url }}/downloads/).

  ### Router Setup Examples

  #### PFSense
  Services -> DHCP Server

  Set both the option for \"TFTP Server\" and the options under the Advanced \"Network Booting\" section.
  * check enable
  * Next server- IP used for TFTP Server
  * Default BIOS file name- `netboot.xyz.kpxe`
  * UEFI 32 bit file name- `netboot.xyz.efi`
  * UEFI 64 bit file name- `netboot.xyz.efi`

  #### OPNsense
  Services -> DHCP Server

  Under the Advanced \"Network Booting\" section.
  * check enable
  * Next server- IP of docker host
  * Default BIOS file name- `netboot.xyz.kpxe`
  * UEFI 32 bit file name- `netboot.xyz.efi`
  * UEFI 64 bit file name- `netboot.xyz.efi`

  #### Unifi Security Gateway (with the controller)
  Networks -> LAN (or the network you want to boot from) -> ADVANCED DHCP OPTIONS
  * tick Enable network boot
  * Server-  YOURSERVERIP
  * Filename- `netboot.xyz.kpxe`
  Advanced full support
  * For USG variants force provisioning a json containing the same config used for
    EdgeOS (shown below) will fully support netboot.
  * For UDM variants, creating a valid dnsmasq config and placing in /run/dnsmasq.conf.d
    will load the config, but will not survive reboots or firmware updates [source](https://community.ui.com/questions/PXE-Network-boot-UDM-SE-Serving-files-conditionally-based-on-architecture/1843fcf6-87d5-4305-bc1d-4e55619ebb10).

  #### EdgeOS/VyOS
  Connect via SSH
  ```
  configure
  set service dhcp-server use-dnsmasq enable
  set service dns forwarding options \"dhcp-match=set:bios,60,PXEClient:Arch:00000\"
  set service dns forwarding options \"dhcp-boot=tag:bios,netboot.xyz.kpxe,,SERVERIP\"
  set service dns forwarding options \"dhcp-match=set:efi32,60,PXEClient:Arch:00002\"
  set service dns forwarding options \"dhcp-boot=tag:efi32,netboot.xyz.efi,,SERVERIP\"
  set service dns forwarding options \"dhcp-match=set:efi32-1,60,PXEClient:Arch:00006\"
  set service dns forwarding options \"dhcp-boot=tag:efi32-1,netboot.xyz.efi,,SERVERIP\"
  set service dns forwarding options \"dhcp-match=set:efi64,60,PXEClient:Arch:00007\"
  set service dns forwarding options \"dhcp-boot=tag:efi64,netboot.xyz.efi,,SERVERIP\"
  set service dns forwarding options \"dhcp-match=set:efi64-1,60,PXEClient:Arch:00008\"
  set service dns forwarding options \"dhcp-boot=tag:efi64-1,netboot.xyz.efi,,SERVERIP\"
  set service dns forwarding options \"dhcp-match=set:efi64-2,60,PXEClient:Arch:00009\"
  set service dns forwarding options \"dhcp-boot=tag:efi64-2,netboot.xyz.efi,,SERVERIP\"
  commit; save
  ```

  #### Dnsmasq/DD-WRT/Tomato/PIHOLE
  Various locations to set Additional/Custom DNSMASQ options in UI or config files
  Set the following lines:
  ```
  dhcp-match=set:bios,60,PXEClient:Arch:00000
  dhcp-boot=tag:bios,netboot.xyz.kpxe,,YOURSERVERIP
  dhcp-match=set:efi32,60,PXEClient:Arch:00002
  dhcp-boot=tag:efi32,netboot.xyz.efi,,YOURSERVERIP
  dhcp-match=set:efi32-1,60,PXEClient:Arch:00006
  dhcp-boot=tag:efi32-1,netboot.xyz.efi,,YOURSERVERIP
  dhcp-match=set:efi64,60,PXEClient:Arch:00007
  dhcp-boot=tag:efi64,netboot.xyz.efi,,YOURSERVERIP
  dhcp-match=set:efi64-1,60,PXEClient:Arch:00008
  dhcp-boot=tag:efi64-1,netboot.xyz.efi,,YOURSERVERIP
  dhcp-match=set:efi64-2,60,PXEClient:Arch:00009
  dhcp-boot=tag:efi64-2,netboot.xyz.efi,,YOURSERVERIP
  ```

  #### OpenWRT
  ```
  uci set dhcp.@dnsmasq[0].dhcp_match=set:bios,60,PXEClient:Arch:00000
  uci set dhcp.@dnsmasq[0].dhcp_boot=tag:bios,netboot.xyz.kpxe,,YOURSERVERIP
  uci set dhcp.@dnsmasq[0].dhcp_match=set:efi32,60,PXEClient:Arch:00002
  uci set dhcp.@dnsmasq[0].dhcp_boot=tag:efi32,netboot.xyz.efi,,YOURSERVERIP
  uci set dhcp.@dnsmasq[0].dhcp_match=set:efi32-1,60,PXEClient:Arch:00006
  uci set dhcp.@dnsmasq[0].dhcp_boot=tag:efi32-1,netboot.xyz.efi,,YOURSERVERIP
  uci set dhcp.@dnsmasq[0].dhcp_match=set:efi64,60,PXEClient:Arch:00007
  uci set dhcp.@dnsmasq[0].dhcp_boot=tag:efi64,netboot.xyz.efi,,YOURSERVERIP
  uci set dhcp.@dnsmasq[0].dhcp_match=set:efi64-1,60,PXEClient:Arch:00008
  uci set dhcp.@dnsmasq[0].dhcp_boot=tag:efi64-1,netboot.xyz.efi,,YOURSERVERIP
  uci set dhcp.@dnsmasq[0].dhcp_match=set:efi64-2,60,PXEClient:Arch:00009
  uci set dhcp.@dnsmasq[0].dhcp_boot=tag:efi64-2,netboot.xyz.efi,,YOURSERVERIP
  uci commit
  /etc/init.d/dnsmasq restart
  ```

  #### Microsoft Server DHCP

  * Run the DHCP program
  * Under Scope/Scope Options
  * check option 066 and enter the FQDN or IP of your TFTP boot server
  * check option 067 and enter one of the following bootfile names:
  * Default BIOS file name- netboot.xyz.kpxe
  * UEFI 32 bit file name- netboot.xyz.efi
  * UEFI 64 bit file name- netboot.xyz.efi

  Anything else from a router standpoint is a crapshoot for supporting Dnsmasq options or proprietary PXE boot options, check Google for support (try your exact router model number with 'pxe boot') or look into setting up your own DHCP server in Linux.

  This image also contains `netboot.xyz.efi` which can be used to boot using UEFI network boot. The UEFI boot and menu will have limited functionality if you choose to use it.
# init diagram
init_diagram: |
  "netbootxyz:tftp": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-os-end -> init-config
    init-config -> init-config-end
    init-os-end -> init-crontab-config
    init-mods-end -> init-custom-files
    base -> init-envfile
    base -> init-migrations
    base -> init-mods
    init-config-end -> init-mods
    init-mods -> init-mods-end
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    base -> init-os-end
    init-adduser -> init-os-end
    init-envfile -> init-os-end
    init-migrations -> init-os-end
    init-custom-files -> init-services
    init-mods-end -> init-services
    init-services -> svc-cron
    svc-cron -> legacy-services
    init-services -> svc-tftp
    svc-tftp -> legacy-services
  }
  Base Images: {
    "baseimage-alpine:3.20"
  }
  "netbootxyz:tftp" <- Base Images
# changelog
changelogs:
  - {date: "30.06.24:", desc: "Rebase to Alpine 3.20."}
  - {date: "08.12.23:", desc: "Rebase tftp branch to Alpine 3.19."}
  - {date: "17.11.23:", desc: "Rebase tftp branch to Alpine 3.18."}
  - {date: "01.07.23:", desc: "Deprecate armhf. As announced [here](https://www.linuxserver.io/blog/a-farewell-to-arm-hf)"}
  - {date: "05.03.23:", desc: "Rebase tftp branch to Alpine 3.17."}
  - {date: "14.10.22:", desc: "Rebasing tftp branch to Alpine 3.16, migrate to s6v3."}
  - {date: "23.01.21:", desc: "Rebasing to alpine 3.13."}
  - {date: "01.06.20:", desc: "Rebasing to alpine 3.12."}
  - {date: "19.12.19:", desc: "Rebasing to alpine 3.11."}
  - {date: "10.12.19:", desc: "Adding tftp branch to provide tftp only option to latest users."}
  - {date: "22.10.19:", desc: "Initial release."}
